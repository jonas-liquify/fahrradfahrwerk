{% layout 'account' %}
<div class="page-wrapper">{% render 'global_styles' %}
{% section 'header' %}
<main li-content-for-layout="" class="main-wrapper" section-wrapper="main.main-wrapper">{% section 'login' %}
</main>{% section 'footer' %}
</div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=6732e3a25d39d28b20480353" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="{{ 'fahrrad-fahrwerk.js' | asset_url }}" type="text/javascript"></script><script src="https://unpkg.com/popper.js@1"></script><script src="https://unpkg.com/tippy.js@5"></script><script>tippy('[data-tippy-content]', {        
      animation: 'fade',    
      duration: 200,      
      arrow: true,          
      delay: [0, 50],      
      arrowType: 'round',  
      theme: 'translucent',        
      maxWidth: 220,
      placement: 'top',
    })
  </script><script>document.querySelectorAll(".li-language-wrapper").forEach((wrapper) => {
    const form = wrapper.querySelector("form");
    const input = wrapper.querySelector("input[name='language_code']");
    form.querySelectorAll("a").forEach((link) => {
      link.addEventListener("click", (event) => {
        input.value = event.currentTarget.dataset.value;
        form.submit();
      });
    });
  });
</script><script>document.addEventListener('DOMContentLoaded', function () {
        new Pikaday({
            field: document.getElementById('termin'),
            format: 'DD.MM.YYYY', // Sicherstellen, dass das gew&uuml;nschte Format eingestellt ist
            toString(date, format) {
                // Formatieren des Datums im gew&uuml;nschten Format
                const day = date.getDate().toString().padStart(2, '0');
                const month = (date.getMonth() + 1).toString().padStart(2, '0');
                const year = date.getFullYear();
                return `${day}.${month}.${year}`;
            },
            parse(dateString, format) {
                // Falls du benutzerdefinierte Parsing-Logik ben&ouml;tigst
                const parts = dateString.split('.');
                const day = parseInt(parts[0], 10);
                const month = parseInt(parts[1], 10) - 1;
                const year = parseInt(parts[2], 10);
                return new Date(year, month, day);
            },
            firstDay: 1, // Woche beginnt mit Montag
            i18n: {
                previousMonth: 'Vorheriger Monat',
                nextMonth: 'N&auml;chster Monat',
                months: [
                    'Januar', 'Februar', 'M&auml;rz', 'April', 'Mai', 'Juni',
                    'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'
                ],
                weekdays: [
                    'Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'
                ],
                weekdaysShort: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa']
            },
            minDate: new Date(),
            maxDate: new Date(2025, 12, 31),
        });
    });
</script>{% render 'search_javascript' %}
