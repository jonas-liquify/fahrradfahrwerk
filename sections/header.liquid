<div data-animation="default" class="navbar_component w-nav" data-easing2="ease" fs-scrolldisable-element="smart-nav" data-easing="ease" data-collapse="medium" data-w-id="1f4a994c-7640-c194-e1f7-4193b5553f7b" role="banner" data-duration="400" x-data="{modals: 0}"><div class="navbar_container"><div id="w-node-fe47f549-98ad-1279-49be-7b89903438dd-b641c10b" class="navbar_link-wrapper hide-tablet">{% for link in linklists['main-menu'].links %}    <div data-hover="true" data-delay="200" li-for="link in linklists['main-menu'].links" class="navbar_menu-dropdown w-dropdown">
                                    
                            <div class="navbar_dropdown-toggle w-dropdown-toggle">{% if link.links.size > 0 %}    <div li-if="link.links.size > 0" class="dropdown-icon w-embed">
    <svg width=" 100%" height=" 100%" viewbox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.55806 6.29544C2.46043 6.19781 2.46043 6.03952 2.55806 5.94189L3.44195 5.058C3.53958 4.96037 3.69787 4.96037 3.7955 5.058L8.00001 9.26251L12.2045 5.058C12.3021 4.96037 12.4604 4.96037 12.5581 5.058L13.4419 5.94189C13.5396 6.03952 13.5396 6.19781 13.4419 6.29544L8.17678 11.5606C8.07915 11.6582 7.92086 11.6582 7.82323 11.5606L2.55806 6.29544Z" fill="currentColor"></path></svg>    </div>
{% endif %}<a li-object:href="link.url" href="{{ link.url }}" class="w-inline-block">{% unless link.title contains '#' %}    <div li-unless="link.title contains '#'">
    <div li-object="link.title">{{ link.title }}</div>    </div>
{% endunless %}{% if link.title contains '#' %}    <div li-if="link.title contains '#'">
    <div li-object="link.title | slice: 8, 100" {% if link.title contains '#' %}style='color: {{ link.title | slice: 0, 7 }}'{% endif %}>{{ link.title | slice: 8, 100 }}</div>    </div>
{% endif %}</a></div>
                            
                            {% if link.links.size > 0  %}    <nav li-if="link.links.size > 0 " class="navbar_dropdown-list hide-scrollbar w-dropdown-list">
    <div class="padding-global max-width-full"><div class="container-large"><div class="navbar_dropdown-grid">{% for child_link in link.links %}    <div li-for="child_link in link.links" id="w-node-_6d42ebaa-a6aa-c210-7d5a-8c7dbe8dc44f-b641c10b">
                                    
                            <a href="{{ child_link.url }}" li-object="child_link.title" li-object:href="child_link.url" class="navbar_dropdown-link w-dropdown-link">{{ child_link.title }}</a>
                            
                            {% if child_link.links.size > 0 %}    <div li-if="child_link.links.size > 0">
    {% for grandchild_link in child_link.links limit:3 %}    <div li-for="grandchild_link in child_link.links limit:3">
                                    
                            <a href="{{ grandchild_link.url }}" li-object="grandchild_link.title" li-object:href="grandchild_link.url" class="navbar_dropdown-link_child w-dropdown-link">{{ grandchild_link.title }}</a>
                            
                        </div>
{% endfor %}<div class="navbar_dropdown-link_child-list">{% for grandchild_link in child_link.links offset:3 %}    <div li-for="grandchild_link in child_link.links offset:3">
                                    
                            <a href="{{ grandchild_link.url }}" li-object="grandchild_link.title" li-object:href="grandchild_link.url" class="navbar_dropdown-link_child w-dropdown-link">{{ grandchild_link.title }}</a>
                            
                        </div>
{% endfor %}</div>{% if child_link.links.size > 3 %}    <div li-if="child_link.links.size > 3" class="navbar_dropdown-link_child is-more">
    <div class="navbar_dropdown-link_child-text">Mehr anzeigen</div><img src="{{ 'arrow_1.svg' | asset_url }}" loading="lazy" alt="" class="navbar_dropdown-link_child-icon is-open">
    </div>
{% endif %}    </div>
{% endif %}
                            
                        </div>
{% endfor %}</div></div></div>    </nav>
{% endif %}
                            
                        </div>
{% endfor %}</div><a href="{{ routes.root_url }}" li-object:href="routes.root_url" class="navbar_logo-link w-nav-brand"><div class="navbar_logo-img w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewbox="0 0 117 50" fill="none" preserveaspectratio="xMidYMid meet" aria-hidden="true" role="img"><g clip-path="url(#clip0_1818_6890)"><path d="M0 6.39187C0.12773 5.96275 0.277809 5.54061 0.449622 5.12716C0.806204 4.35597 1.37916 3.70502 2.09881 3.25347C2.81847 2.80192 3.65381 2.56923 4.50324 2.5837C4.69995 2.5837 4.89666 2.5837 5.09337 2.5837C24.118 2.5837 43.145 2.5837 62.1743 2.5837C62.5492 2.60628 62.9224 2.65322 63.2913 2.72422V3.08255C62.9661 3.1404 62.6376 3.17794 62.3077 3.19497C56.7928 3.19497 51.285 3.19497 45.7771 3.19497C32.2323 3.19497 18.6851 3.19497 5.13552 3.19497C4.19151 3.20302 3.26085 3.41892 2.40969 3.82733C1.87068 4.10191 1.42266 4.52666 1.11973 5.05031C0.8168 5.57396 0.671903 6.17411 0.702534 6.77831C0.702534 12.4554 0.702534 18.1326 0.702534 23.8097C0.719916 23.9321 0.750538 24.0523 0.793863 24.168L4.2152 23.1844C4.65077 23.0579 5.06527 22.8823 5.50787 22.7979C6.80996 22.5646 8.05162 22.071 9.15855 21.3467C10.2655 20.6223 11.2149 19.6821 11.9501 18.5823C12.3069 18.0923 12.8325 17.7519 13.4254 17.6267C17.0083 17.0997 19.7482 14.9427 22.5092 12.9121C23.3733 12.2798 24.3077 12.4414 25.228 12.3149C25.3263 12.3149 25.4598 12.4484 25.5582 12.5327C26.4715 13.3548 27.2653 14.3806 28.3121 14.9497C29.6399 15.6523 30.216 16.896 31.0661 17.9639C31.7545 18.8489 32.5365 19.6569 33.3985 20.3739C33.7638 20.669 34.4031 20.6128 34.9089 20.7604C35.7637 20.9695 36.5983 21.254 37.4029 21.6105C37.6311 21.7603 37.8946 21.8475 38.167 21.8636C38.4395 21.8796 38.7113 21.8238 38.9555 21.7019C40.1498 21.1327 41.3863 20.669 42.5736 20.0929C42.8511 19.9038 43.1791 19.8026 43.515 19.8026C43.8508 19.8026 44.1788 19.9038 44.4563 20.0929C45.1589 20.6198 45.7279 20.402 46.3602 19.8399C48.0252 18.3785 49.7535 16.9803 51.4817 15.5821C51.8379 15.3031 52.25 15.1042 52.69 14.9989C53.9406 14.6827 55.2262 14.486 56.4627 14.1417C59.0885 13.4937 61.4747 12.1092 63.3405 10.1509C65.4481 7.80413 67.5557 5.39416 69.6633 3.0404C70.0658 2.61264 70.5417 2.26045 71.0683 2.00052C72.368 1.34709 73.7169 0.777974 75.0306 0.14562C75.5575 -0.107322 75.9299 -0.0511125 76.2249 0.475849C76.6465 1.22765 77.082 1.97242 77.5106 2.72422C77.5573 2.82597 77.6215 2.91872 77.7003 2.99824C80.5806 5.1904 82.4845 8.26083 84.8239 10.9378C85.3591 11.5835 86.0615 12.0696 86.8543 12.343C89.4536 13.2283 92.039 14.1698 94.6243 15.1043C94.8693 15.2164 95.1346 15.2773 95.404 15.2834C95.6734 15.2894 95.9411 15.2404 96.1909 15.1394C96.9306 14.9683 97.6964 14.9421 98.4461 15.0621C99.7678 15.0223 101.068 15.4064 102.155 16.1582C103.132 16.896 104.516 17.0997 105.724 17.5072C105.83 17.5463 105.942 17.5614 106.054 17.5517C106.166 17.542 106.274 17.5076 106.371 17.451C107.073 16.8679 107.628 17.1911 108.26 17.5564C109.71 18.2766 111.117 19.0789 112.476 19.9594C113.642 20.8306 114.963 20.7744 116.34 21.2452V20.2404C116.34 15.9966 116.34 11.7552 116.34 7.51606C116.34 4.70559 114.864 3.20902 112.012 3.20902H80.5736C80.8757 2.88582 80.9811 2.67504 81.1286 2.63288C81.3755 2.57975 81.6291 2.56553 81.8803 2.59072C91.9125 2.59072 101.947 2.59072 111.984 2.59072C113.124 2.50337 114.261 2.79749 115.216 3.42683C115.832 3.89838 116.32 4.51591 116.638 5.22369C116.956 5.93147 117.092 6.70722 117.035 7.48093C117.035 19.2287 117.035 30.974 117.035 42.7171C117.064 43.6732 117.041 44.6302 116.965 45.5838C116.906 46.5049 116.541 47.38 115.929 48.0709C115.317 48.7618 114.493 49.2291 113.586 49.399C113.456 49.4438 113.329 49.4978 113.206 49.5606H3.87799C3.15544 49.2882 2.45141 48.969 1.77039 48.605C0.702534 47.9446 0.323166 46.8204 0 45.6681V6.39187ZM54.2216 19.7416C53.779 19.861 53.519 19.9313 53.2099 20.0296C51.5098 20.6479 49.5357 20.4091 48.0252 21.5965C46.9082 22.4747 45.8122 22.6223 44.632 21.744C44.4207 21.5839 44.1629 21.4972 43.8978 21.4972C43.6328 21.4972 43.3749 21.5839 43.1637 21.744C41.9553 22.4466 40.7048 23.1071 39.4754 23.7746C39.135 23.9939 38.7387 24.1106 38.3338 24.1106C37.9289 24.1106 37.5325 23.9939 37.1921 23.7746C35.4007 22.7277 33.5319 21.8073 31.7335 20.7814C31.2088 20.54 30.7632 20.1552 30.4478 19.6713C29.4994 17.6337 27.7922 16.7836 25.7479 16.355H25.6636C25.228 16.1582 24.961 16.355 24.7011 16.6992C24.3668 17.0899 23.9523 17.4038 23.4857 17.6197C22.9033 17.9028 22.2871 18.1106 21.6521 18.238C21.445 18.2506 21.2428 18.3058 21.058 18.4001C20.8732 18.4943 20.7098 18.6256 20.578 18.7858C20.4462 18.946 20.3488 19.1316 20.2918 19.3311C20.2349 19.5306 20.2196 19.7397 20.247 19.9453C20.3587 20.459 20.5333 20.9569 20.7669 21.4278C20.3488 21.6762 19.8896 21.8475 19.411 21.9337C18.0333 21.9712 16.6545 21.9384 15.2801 21.8354C14.7532 21.8354 14.4722 21.8775 14.2755 22.4185C14.0982 22.7289 13.8093 22.9601 13.4676 23.0649C12.7299 23.3249 11.9431 23.4514 11.1984 23.6903C9.44206 24.2664 7.82623 25.2571 5.81698 25.0182C5.37205 24.9607 4.91985 25.0068 4.49572 25.1531C4.07159 25.2993 3.68705 25.5418 3.37216 25.8613C4.28546 26.7185 5.72565 26.1283 6.72325 27.2666H0.660382V44.4807C0.660382 47.4879 2.06545 48.9001 5.11445 48.9001H111.949C114.913 48.9001 116.368 47.4949 116.368 44.5228V24.5404C116.368 24.3718 116.431 24.161 116.368 24.0416C116.213 23.8027 116.009 23.4654 115.785 23.4373C114.562 23.2617 113.333 23.1774 112.103 23.0579L108.858 22.7066V22.545L110.677 21.7792V21.5403C110.319 21.4278 109.975 21.3084 109.609 21.203C105.837 20.0788 101.945 19.4535 98.2494 18.0061C93.2895 16.0669 88.2453 14.3244 83.1941 12.6241C81.8944 12.1884 81.227 11.5561 81.1708 10.2141C81.1448 9.7394 81.0119 9.2767 80.782 8.8606C80.552 8.44449 80.231 8.08574 79.843 7.81116C78.6136 6.83452 77.4403 5.7806 76.3303 4.69857C76.2328 4.56862 76.1053 4.46425 75.9586 4.39441C75.812 4.32456 75.6506 4.29133 75.4883 4.29754C75.326 4.30376 75.1676 4.34925 75.0267 4.43011C74.8858 4.51096 74.7666 4.62478 74.6794 4.7618C74.0989 5.40646 73.6247 6.1393 73.2743 6.93289C72.6612 8.89057 71.3313 10.5444 69.5509 11.5631C69.4147 11.6767 69.3083 11.8219 69.2409 11.986C69.1736 12.15 69.1473 12.3281 69.1645 12.5046C69.2913 12.7999 69.313 13.1298 69.2261 13.4392C69.1392 13.7486 68.9488 14.0189 68.6867 14.205C68.4668 14.4192 68.284 14.6685 68.1458 14.9427C67.9498 15.2042 67.8206 15.5095 67.7693 15.8323C67.718 16.155 67.7461 16.4854 67.8513 16.7948C67.9565 17.1042 68.1356 17.3832 68.373 17.6078C68.6104 17.8323 68.8989 17.9956 69.2136 18.0834C69.7363 18.2836 70.2743 18.4411 70.8224 18.5541C73.4218 19.1233 76.0353 19.6573 78.6346 20.2475C79.3372 20.4091 80.0397 20.6901 80.7422 20.9149L80.7001 21.1538C80.4682 21.1538 80.2364 21.2171 79.9975 21.2171C77.6089 21.2171 75.2203 21.2171 72.8317 21.1609C71.3729 21.154 69.9184 21.001 68.49 20.7042C66.2279 20.1631 64.0219 19.3973 61.7949 18.7298C59.9928 18.087 58.0871 17.7845 56.1746 17.8375C55.0838 17.8729 54.019 18.1796 53.0764 18.7298L54.2216 19.7416Z" fill="currentColor"></path><path d="M67.3934 32.227C69.775 32.227 72.1214 32.1848 74.4609 32.227C74.6539 32.2256 74.8452 32.264 75.0227 32.3399C75.2003 32.4157 75.3603 32.5273 75.4928 32.6677C75.6253 32.8082 75.7274 32.9744 75.7928 33.156C75.8582 33.3377 75.8855 33.5309 75.873 33.7236C75.9362 34.7578 75.9362 35.7949 75.873 36.8291C75.8749 37.036 75.8352 37.2411 75.7561 37.4322C75.677 37.6233 75.5602 37.7966 75.4126 37.9415C75.2651 38.0865 75.0898 38.2002 74.8973 38.2758C74.7048 38.3515 74.499 38.3876 74.2923 38.3819C72.0231 38.4381 69.7609 38.3819 67.4215 38.3819L67.3934 32.227ZM69.2481 36.9064C70.5759 36.9064 71.7491 36.9064 72.9223 36.9064C73.0667 36.9193 73.2122 36.9004 73.3485 36.8509C73.4847 36.8015 73.6085 36.7227 73.711 36.6202C73.8135 36.5177 73.8923 36.3939 73.9417 36.2576C73.9912 36.1213 74.0101 35.9758 73.9972 35.8314C74.0253 35.3869 74.0253 34.941 73.9972 34.4964C73.9958 34.3758 73.9694 34.2567 73.9196 34.1467C73.8698 34.0368 73.7977 33.9384 73.7078 33.8579C73.618 33.7773 73.5124 33.7162 73.3978 33.6786C73.2831 33.641 73.1619 33.6276 73.0418 33.6392C71.9528 33.6392 70.8569 33.6392 69.768 33.6392C69.5993 33.6392 69.3043 33.8922 69.2973 34.0327C69.227 34.9672 69.2481 35.8806 69.2481 36.9064V36.9064Z" fill="currentColor"></path><path d="M99.0576 32.0936C99.8725 32.0936 100.695 32.0303 101.495 32.0936C101.758 32.0882 102.019 32.1387 102.261 32.2418C102.502 32.3449 102.72 32.4982 102.898 32.6915C103.076 32.8848 103.21 33.1138 103.293 33.3632C103.376 33.6126 103.405 33.8767 103.378 34.1382C103.378 34.9181 103.413 35.705 103.378 36.4919C103.315 37.6864 102.767 38.3539 101.587 38.4101C99.8538 38.485 98.1209 38.485 96.388 38.4101C95.2288 38.3609 94.7019 37.7075 94.6597 36.5482C94.6246 35.6488 94.6246 34.7495 94.6597 33.8571C94.6346 33.4422 94.7738 33.0341 95.0473 32.7212C95.3208 32.4082 95.7065 32.2156 96.121 32.1849C97.0905 32.0374 98.0741 32.0374 99.0506 31.9741L99.0576 32.0936ZM98.9592 36.9627H99.4651C101.362 36.9627 101.502 36.8081 101.425 34.8548C101.425 34.7705 101.425 34.6862 101.425 34.6019C101.362 34.0258 101.074 33.6463 100.47 33.6323C99.4932 33.6323 98.5096 33.5901 97.5401 33.6323C97.3803 33.653 97.2265 33.7068 97.0886 33.7902C96.9507 33.8737 96.8317 33.985 96.7392 34.1171C95.9524 35.5223 96.7392 36.9276 98.2918 36.9276L98.9592 36.9627Z" fill="currentColor"></path><path d="M53.512 38.375V32.2411C55.9217 32.2411 58.2963 32.199 60.6638 32.2411C60.9957 32.2572 61.309 32.3991 61.54 32.6379C61.771 32.8768 61.9023 33.1947 61.9073 33.5269C61.9705 34.669 61.9705 35.8137 61.9073 36.9557C61.9074 37.1451 61.8693 37.3325 61.7952 37.5068C61.7211 37.681 61.6126 37.8385 61.4761 37.9698C61.3396 38.101 61.178 38.2033 61.001 38.2705C60.824 38.3378 60.6352 38.3685 60.446 38.3609C58.1628 38.4171 55.8725 38.375 53.512 38.375ZM55.3246 33.6745C55.3246 34.6511 55.3246 35.5715 55.3246 36.4849C55.3246 36.6395 55.6266 36.8925 55.7952 36.8995C56.891 36.9475 57.9886 36.9358 59.0831 36.8644C59.2788 36.8292 59.463 36.7469 59.6197 36.6244C59.7764 36.502 59.9009 36.3432 59.9823 36.1617C60.1125 35.5574 60.1125 34.9323 59.9823 34.3279C59.9263 34.1706 59.8332 34.0291 59.7109 33.9153C59.5887 33.8016 59.4408 33.719 59.2798 33.6745C58.0082 33.6394 56.7226 33.6745 55.3246 33.6745Z" fill="currentColor"></path><path d="M106.302 34.047V37.3071C106.302 38.4945 106.302 38.4945 105.08 38.4524C104.89 38.4524 104.7 38.4102 104.468 38.3891V32.0656C105.396 32.0656 106.337 32.0656 107.279 32.0656C107.489 32.0656 107.707 32.3888 107.876 32.6066C108.923 33.9065 109.983 35.2204 110.995 36.5272L111.22 36.471V33.6535C111.22 31.9391 111.22 31.9391 113.074 32.1499V38.4735C112.168 38.4735 111.255 38.5086 110.342 38.4735C110.124 38.4735 109.878 38.1994 109.716 37.9957C108.642 36.6748 107.609 35.3328 106.534 33.9978L106.302 34.047Z" fill="currentColor"></path><path d="M50.2443 32.1215H52.085C52.085 32.4447 52.1482 32.7398 52.1482 33.0349C52.1482 34.5526 52.1482 36.0702 52.1482 37.5879C52.1482 38.2202 51.9866 38.4099 51.3122 38.4872C50.6277 38.629 49.9157 38.5455 49.2826 38.2492C48.6494 37.9528 48.1292 37.4596 47.7995 36.8431C47.0605 35.757 46.2582 34.7154 45.3968 33.7235V38.438C44.9297 38.4865 44.4589 38.4865 43.9918 38.438C43.8674 38.398 43.7555 38.3265 43.6669 38.2305C43.5783 38.1345 43.5159 38.0172 43.486 37.89C43.4438 36.1545 43.486 34.4121 43.486 32.6696C43.486 32.2269 43.6686 32.0513 44.0972 32.1005H44.1815C46.3663 32.0021 46.3663 32.0021 47.7714 33.7586L49.9914 36.534C49.9914 36.5691 50.0898 36.5761 50.2443 36.6393V32.1215Z" fill="currentColor"></path><path d="M13.0382 32.1992C13.1928 32.143 13.242 32.1079 13.2912 32.1008C14.9491 31.9673 14.9491 31.9673 14.9491 33.6255C14.9491 34.3281 14.9491 35.0307 14.9491 35.7334C14.9491 36.6749 15.2301 36.9348 16.1505 36.9629C16.7406 36.9629 17.3307 36.9629 17.9208 36.9629C18.8763 36.9629 19.1643 36.6678 19.1995 35.6982C19.2346 34.7286 19.1995 33.9557 19.1995 33.0845V32.136H21.012C21.012 33.7379 21.0682 35.3048 21.012 36.8646C20.9997 37.2669 20.8344 37.6494 20.5498 37.934C20.2652 38.2186 19.8828 38.3839 19.4805 38.3963C17.9735 38.4806 16.4631 38.4806 14.9562 38.3963C13.6635 38.312 13.1015 37.6937 13.0523 36.3868C12.9961 35.0167 13.0382 33.6185 13.0382 32.1992Z" fill="currentColor"></path><path d="M40.3453 32.206C42.2 31.8407 42.2703 31.8969 42.2703 33.6113C42.2703 34.4825 42.2703 35.3537 42.2703 36.218C42.207 37.7286 41.7153 38.3258 40.2329 38.4663C38.7534 38.5448 37.2703 38.5284 35.7929 38.4172C35.3914 38.3959 35.0129 38.223 34.7339 37.9335C34.4548 37.644 34.296 37.2594 34.2895 36.8573C34.2262 35.3186 34.2895 33.7799 34.2895 32.1779H36.109C36.109 33.2248 36.109 34.2858 36.109 35.3256C36.109 36.7309 36.3338 36.9768 37.76 36.9908C40.4788 36.9908 40.4015 37.1243 40.3804 34.3771C40.3453 33.6323 40.3453 32.9086 40.3453 32.206Z" fill="currentColor"></path><path d="M76.3669 38.4733C77.5261 36.3655 78.5658 34.3911 79.6407 32.4589C79.7191 32.3558 79.8185 32.2705 79.9324 32.2087C80.0462 32.1469 80.1719 32.1101 80.3011 32.1006C82.2612 31.953 82.2682 31.9671 83.2096 33.6744L85.823 38.4522C85.2544 38.485 84.6844 38.485 84.1159 38.4522C83.9889 38.4271 83.8688 38.3752 83.7634 38.3001C83.6581 38.225 83.5699 38.1284 83.5047 38.0166C83.416 37.7817 83.2459 37.5865 83.0254 37.4666C82.8049 37.3466 82.5486 37.3099 82.3033 37.3632C81.4041 37.3983 80.5048 37.3632 79.6056 37.3632C79.3948 37.3632 79.0436 37.4194 79.0084 37.5318C78.5588 38.9019 77.4558 38.3539 76.3669 38.4733ZM79.7953 35.9579H82.3946L81.0669 33.4707L79.7953 35.9579Z" fill="currentColor"></path><path d="M12.4059 38.4311C11.3591 38.3678 10.3475 38.9018 9.83463 37.616C9.7714 37.4685 9.42013 37.3701 9.19532 37.3631C8.18367 37.335 7.17203 37.335 6.16038 37.3631C5.94259 37.3631 5.59132 37.4755 5.53512 37.623C5.03632 38.951 3.98955 38.3257 2.94277 38.5013C4.116 36.3302 5.17683 34.3629 6.25873 32.4026C6.39031 32.2347 6.58154 32.124 6.79266 32.0935C8.70355 31.8475 8.83703 31.9248 9.78545 33.6603C10.6355 35.199 11.4786 36.7448 12.4059 38.4311ZM7.6638 33.5127L6.37114 35.9719H8.97754L7.6638 33.5127Z" fill="currentColor"></path><path d="M22.3548 32.1284H28.9234V33.5336C27.5957 33.5336 26.2608 33.5336 24.926 33.5336C24.3851 33.5336 24.1813 33.6953 24.2235 34.2363C24.2656 34.7773 24.5186 34.8686 24.9682 34.8616C26.1976 34.8616 27.427 34.8616 28.6986 34.8616V36.2668H24.2516L24.1532 38.4239H22.3548V32.1284Z" fill="currentColor"></path><path d="M89.4804 36.9347C90.1829 35.663 90.752 34.5388 91.3421 33.4217C92.1571 31.8829 92.1571 31.8829 94.0398 32.2061C93.7307 32.7963 93.4357 33.3514 93.1336 33.9135C92.4311 35.2204 91.7285 36.5202 91.026 37.8411C90.9338 38.037 90.7877 38.2025 90.6047 38.3182C90.4218 38.4339 90.2097 38.4951 89.9933 38.4945C89.4555 38.6215 88.8896 38.5379 88.4115 38.261C87.9335 37.984 87.5794 37.5347 87.422 37.005C86.7194 35.3679 85.771 33.8432 84.921 32.2553C86.4876 31.8267 86.8248 31.9672 87.5344 33.3092L89.4804 36.9347Z" fill="currentColor"></path><path d="M57.7129 41.2698C57.8955 41.5508 57.9728 41.6141 57.9728 41.6773C57.9728 42.9069 57.9728 44.1364 57.9728 45.3449C57.2211 45.4012 56.4834 45.4925 55.7528 45.4925C54.699 45.4925 54.3477 45.1061 54.3477 44.0873C54.3477 43.0685 54.6217 42.682 55.7528 42.682C56.3359 42.682 56.912 42.682 57.5653 42.682L57.7129 41.2698ZM56.1603 45.2044C57.3335 45.2044 57.5653 45.0147 57.5653 44.0802C57.5653 43.1458 57.3757 42.9279 56.2024 42.9209C55.9776 42.9209 55.6966 42.8507 55.542 42.9631C55.247 43.1668 54.8395 43.4479 54.7974 43.75C54.6077 44.9655 54.9027 45.2044 56.1603 45.2044V45.2044Z" fill="currentColor"></path><path d="M94.4753 45.5768V42.7663C95.0151 42.6494 95.567 42.5975 96.1192 42.6118C97.0688 42.7277 98.029 42.7277 98.9785 42.6118C100.166 42.4923 100.468 42.8717 100.475 44.0662C100.475 44.5229 100.475 44.9796 100.475 45.4292H100.103C100.103 45.0147 100.046 44.5931 100.046 44.1716C100.046 43.0614 99.8848 42.8858 98.9083 42.8858C97.9318 42.8858 97.6507 43.1457 97.6507 44.2629V45.4573H97.2854C97.2854 44.9585 97.2854 44.4596 97.2854 43.9608C97.2433 43.0966 97.0325 42.935 96.0279 42.935C95.0233 42.935 94.8195 43.1387 94.7844 44.0029C94.7844 44.4526 94.7844 44.8953 94.7352 45.3449C94.7282 45.366 94.6579 45.4011 94.4753 45.5768Z" fill="currentColor"></path><path d="M82.6249 42.7311V46.4761H82.3931L82.2948 45.4854C81.5922 45.4854 80.8897 45.4854 80.1871 45.4854C79.3511 45.4854 79.1193 44.9374 79.1193 44.1856C79.1193 43.1176 79.3301 42.7101 80.1169 42.6609C80.7509 42.6659 81.3841 42.7058 82.0137 42.7803C82.2182 42.7745 82.4222 42.7581 82.6249 42.7311V42.7311ZM80.8475 45.2044H81.1004C82.091 45.2044 82.3299 44.9655 82.3299 44.0521C82.3299 43.1387 82.091 42.9419 81.0723 42.9209C80.8475 42.9209 80.6227 42.9209 80.3698 42.9209C79.7867 42.9209 79.5127 43.2019 79.4565 43.771C79.3863 44.8882 79.6603 45.2044 80.8475 45.2044Z" fill="currentColor"></path><path d="M101.797 44.1084C101.951 45.3801 103.553 45.6261 104.804 44.7197L104.951 44.9164C104.691 45.1061 104.445 45.4153 104.164 45.4504C103.553 45.5172 102.935 45.5172 102.324 45.4504C101.459 45.3801 101.361 44.7478 101.361 44.0452C101.361 43.3426 101.424 42.7102 102.31 42.6399C102.777 42.6024 103.247 42.6024 103.715 42.6399C104.698 42.6962 104.923 42.9772 104.923 44.1084H101.797ZM104.698 43.736C104.185 42.6048 103.293 43.0334 102.591 42.9421C102.127 42.9421 101.769 43.0896 101.832 43.736H104.698Z" fill="currentColor"></path><path d="M78.313 44.1363H75.1727C75.257 45.3729 76.6761 45.6117 78.2006 44.7264L78.3412 44.8951C78.0812 45.0848 77.8423 45.3799 77.5543 45.4431C77.1112 45.5183 76.6603 45.5372 76.2125 45.4993C74.983 45.4993 74.695 45.1902 74.7231 43.9325C74.7231 42.9559 74.9901 42.6818 75.9596 42.6256C76.3221 42.601 76.6859 42.601 77.0485 42.6256C78.0531 42.6959 78.2358 42.9067 78.313 44.1363ZM77.9618 43.7428C77.6246 42.9418 77.0696 42.738 75.8542 42.9629C75.5732 43.0121 75.3413 43.3142 75.0884 43.4969L75.243 43.7428H77.9618Z" fill="currentColor"></path><path d="M90.2837 45.3519C90.2415 45.7384 90.2064 46.0967 90.1643 46.4621H89.9676V42.8085C90.5788 42.7523 91.2251 42.6398 91.8785 42.6328C93.2835 42.6328 93.6699 43.1387 93.4732 44.5018C93.4728 44.6421 93.4432 44.7808 93.3863 44.9091C93.3295 45.0373 93.2465 45.1524 93.1428 45.2469C93.0391 45.3414 92.9168 45.4132 92.7838 45.4579C92.6508 45.5026 92.51 45.5192 92.3702 45.5065C92.0049 45.5065 91.6677 45.5065 91.2813 45.5065C90.8949 45.5065 90.6279 45.4081 90.2837 45.3519ZM91.6888 45.2044C92.9252 45.2044 93.15 45.0287 93.143 44.031C93.136 43.0333 92.9323 42.9279 91.8012 42.9209C90.6701 42.9139 90.2767 43.1387 90.2696 44.0521C90.2626 44.9655 90.5296 45.2044 91.6607 45.2044H91.6888Z" fill="currentColor"></path><path d="M65.5616 45.4853C65.2806 45.4853 64.9996 45.4853 64.7186 45.4853C63.8896 45.4009 63.6015 45.0075 63.6086 44.0379C63.6156 43.0683 63.8825 42.7521 64.6975 42.6326C65.1161 42.601 65.5364 42.601 65.955 42.6326C67.1845 42.6889 67.4865 43.0191 67.4444 44.2206C67.4022 45.2464 67.0299 45.4993 65.5616 45.4853ZM65.5054 45.2042C66.8262 45.2042 67.044 45.0356 67.0299 44.0168C67.0158 42.998 66.8191 42.9207 65.5054 42.9207H65.0839C64.3813 42.9207 64.009 43.2299 64.016 43.9746C64.0231 45.0286 64.2127 45.2042 65.5054 45.2042V45.2042Z" fill="currentColor"></path><path d="M61.1204 45.5067C59.1955 45.5067 58.5281 44.7268 59.055 43.3496C59.1393 43.1388 59.35 42.8227 59.5116 42.8156C60.4087 42.6891 61.3192 42.6891 62.2164 42.8156C63.0032 42.9983 62.8557 43.8836 62.7222 44.4738C62.5492 44.8932 62.2296 45.2353 61.8229 45.4364C61.5986 45.5192 61.3567 45.5434 61.1204 45.5067ZM60.9026 42.921H60.6497C59.5538 42.921 59.357 43.1107 59.3641 44.0733C59.3711 45.0359 59.5889 45.1975 60.6848 45.2045H61.1836C62.1953 45.2045 62.5255 44.783 62.4131 43.7993C62.3007 42.8156 61.5349 42.9281 60.8745 42.921H60.9026Z" fill="currentColor"></path><path d="M43.7472 45.6679C41.9768 45.4923 41.5061 44.9653 41.8292 43.4687C41.8292 43.3914 41.8292 43.3001 41.8784 43.2228C42.1524 42.6045 44.2249 42.3235 45.0609 42.7802C45.6299 43.0893 45.9391 44.4313 45.4122 44.9442C44.9032 45.28 44.3398 45.5249 43.7472 45.6679V45.6679ZM43.7472 42.9066H43.4942C42.4053 42.9066 42.1665 43.1245 42.1665 44.0449C42.1665 44.9653 42.4334 45.1831 43.4942 45.1901C43.712 45.1901 43.9368 45.1901 44.1968 45.1901C44.8993 45.1901 45.2646 44.8669 45.2717 44.1292C45.2295 43.1315 44.9977 42.9277 43.7331 42.9207L43.7472 42.9066Z" fill="currentColor"></path><path d="M110.299 42.7452L110.938 41.9583C111.241 43.1597 112.287 42.415 112.955 42.9068L111.121 42.9981C111.276 43.7499 110.693 44.6633 111.578 45.106C112.224 45.4432 112.899 45.2043 112.983 44.1855C113.222 44.8882 113.116 45.3167 112.449 45.4573C111.458 45.6751 110.798 45.387 110.707 44.6844C110.664 44.3542 110.707 43.9818 110.671 43.6797C110.576 43.3576 110.451 43.0448 110.299 42.7452V42.7452Z" fill="currentColor"></path><path d="M50.9468 42.7591L51.5861 41.9441C51.8811 43.2018 52.956 42.3938 53.6164 42.8996L51.8952 42.991C51.551 44.1292 51.6844 44.9864 52.2324 45.1691C52.8858 45.3869 53.3003 45.1269 53.6375 44.3119C53.8623 44.9443 53.7429 45.2956 53.237 45.4572C52.3378 45.7452 51.4947 45.4572 51.3823 44.7546C51.3191 44.3751 51.3823 43.9676 51.3332 43.5882C51.2441 43.295 51.114 43.0159 50.9468 42.7591V42.7591Z" fill="currentColor"></path><path d="M49.9798 42.6961V45.3309C49.3756 45.3871 48.7293 45.4855 48.0829 45.4996C46.7481 45.4996 46.5584 45.3239 46.5584 44.017V42.7242H46.9308C46.9308 43.188 46.9308 43.6517 46.9308 44.1295C46.9308 45.0639 47.1485 45.2326 48.1953 45.2326C49.2421 45.2326 49.6004 45.0218 49.6004 44.0803C49.6004 43.6236 49.6425 43.1669 49.6566 42.675L49.9798 42.6961Z" fill="currentColor"></path><path d="M105.95 45.4291V42.7732C106.181 42.7732 106.406 42.7732 106.652 42.7732C107.355 42.7732 107.98 42.703 108.647 42.6819C108.786 42.6946 108.918 42.7484 109.027 42.8365C109.546 43.2018 109.617 44.9443 109.027 45.6469C109.027 44.9443 109.027 44.4173 109.027 43.8763C109.027 43.3353 108.76 43.0262 108.177 42.97C106.61 42.8365 106.315 43.0964 106.294 44.6984C106.294 44.9584 106.259 45.2183 106.238 45.4713L105.95 45.4291Z" fill="currentColor"></path><path d="M68.5098 45.4361V42.7662C69.13 42.6916 69.7539 42.6517 70.3786 42.6467C71.2216 42.6467 71.3481 42.8716 71.2778 43.5812C70.837 43.3139 70.3651 43.1016 69.8728 42.9489C69.1702 42.8083 68.7768 43.2088 68.7908 43.9606C68.7908 44.4524 68.7908 44.9373 68.7908 45.4291L68.5098 45.4361Z" fill="currentColor"></path><path d="M86.6633 44.9654C86.5439 45.12 86.4175 45.4291 86.3121 45.4221C85.5323 45.3729 84.5206 45.5345 84.0359 45.1129C83.4317 44.5789 83.7268 43.5531 83.8532 42.7451H84.1412V44.0098C84.1412 45.0356 84.338 45.2464 85.3707 45.2183C85.8113 45.1801 86.2482 45.1073 86.6774 45.0005L86.6633 44.9654Z" fill="currentColor"></path><path d="M86.6774 44.9656C86.7758 44.2138 86.8812 43.462 86.9795 42.7102C87.3448 43.0615 87.4291 44.537 87.106 45.5207L86.6634 44.9305L86.6774 44.9656Z" fill="currentColor"></path><path d="M88.6536 42.7312V45.4293H88.4639V42.7312H88.6536Z" fill="currentColor"></path></g><defs><clippath id="clip0_1818_6890"><rect width="117" height="49.5625" fill="currentColor"></rect></clippath></defs></svg></div></a><nav role="navigation" id="w-node-_1f4a994c-7640-c194-e1f7-4193b5553f7f-b641c10b" class="navbar_menu is-page-height-tablet w-nav-menu"><div class="navbar_link-wrapper hide-desktop">{% for link in linklists['main-menu'].links %}    <div data-hover="true" data-delay="200" li-for="link in linklists['main-menu'].links" class="navbar_menu-dropdown w-dropdown">
                                    
                            <div class="navbar_dropdown-toggle w-dropdown-toggle">{% if link.links.size > 0 %}    <div li-if="link.links.size > 0" class="dropdown-icon w-embed">
    <svg width=" 100%" height=" 100%" viewbox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.55806 6.29544C2.46043 6.19781 2.46043 6.03952 2.55806 5.94189L3.44195 5.058C3.53958 4.96037 3.69787 4.96037 3.7955 5.058L8.00001 9.26251L12.2045 5.058C12.3021 4.96037 12.4604 4.96037 12.5581 5.058L13.4419 5.94189C13.5396 6.03952 13.5396 6.19781 13.4419 6.29544L8.17678 11.5606C8.07915 11.6582 7.92086 11.6582 7.82323 11.5606L2.55806 6.29544Z" fill="currentColor"></path></svg>    </div>
{% endif %}<a li-object:href="link.url" href="{{ link.url }}" class="navbar_link w-inline-block"><div li-object="link.title | remove: 'red-'" class="{% if link.title contains 'red-' %}text-color-red{% endif %}">{{ link.title | remove: 'red-' }}</div></a></div>
                            
                            {% if link.links.size > 0  %}    <nav li-if="link.links.size > 0 " class="navbar_dropdown-list w-dropdown-list">
    <div class="padding-global max-width-full"><div class="container-large"><div class="navbar_dropdown-grid">{% for child_link in link.links %}    <div li-for="child_link in link.links">
                                    
                            <a href="{{ child_link.url }}" li-object="child_link.title" li-object:href="child_link.url" class="navbar_dropdown-link w-dropdown-link">{{ child_link.title }}</a>
                            
                            {% if child_link.links.size > 0 %}    <div li-if="child_link.links.size > 0">
    {% for grandchild_link in child_link.links %}    <div li-for="grandchild_link in child_link.links">
                                    
                            <a href="{{ grandchild_link.url }}" li-object="grandchild_link.title" li-object:href="grandchild_link.url" class="navbar_dropdown-link_child w-dropdown-link">{{ grandchild_link.title }}</a>
                            
                        </div>
{% endfor %}    </div>
{% endif %}
                            
                        </div>
{% endfor %}</div></div></div>    </nav>
{% endif %}
                            
                        </div>
{% endfor %}</div>{% for link in linklists['main-menu-2'].links %}    <div data-hover="true" data-delay="200" li-for="link in linklists['main-menu-2'].links" class="navbar_menu-dropdown hide-desktop w-dropdown">
                                    
                            <div class="navbar_dropdown-toggle w-dropdown-toggle">{% if link.links.size > 0 %}    <div li-if="link.links.size > 0" class="dropdown-icon w-embed">
    <svg width=" 100%" height=" 100%" viewbox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.55806 6.29544C2.46043 6.19781 2.46043 6.03952 2.55806 5.94189L3.44195 5.058C3.53958 4.96037 3.69787 4.96037 3.7955 5.058L8.00001 9.26251L12.2045 5.058C12.3021 4.96037 12.4604 4.96037 12.5581 5.058L13.4419 5.94189C13.5396 6.03952 13.5396 6.19781 13.4419 6.29544L8.17678 11.5606C8.07915 11.6582 7.92086 11.6582 7.82323 11.5606L2.55806 6.29544Z" fill="currentColor"></path></svg>    </div>
{% endif %}<div class="navbar_link-holder">{% if link.title != 'Sale' %}    <div li-if="link.title != 'Sale'">
    <a li-object:href="link.url" href="{{ link.url }}" class="navbar_link w-inline-block"><div li-object="link.title | remove: 'red-'" class="{% if link.title contains 'red-' %}text-color-red{% endif %}">{{ link.title | remove: 'red-' }}</div></a>    </div>
{% endif %}</div></div>
                            
                            {% if link.links.size > 0  %}    <nav li-if="link.links.size > 0 " class="navbar_dropdown-list w-dropdown-list">
    <div class="padding-global max-width-full"><div class="container-large"><div class="navbar_dropdown-grid">{% for child_link in link.links %}    <div li-for="child_link in link.links">
                                    
                            <a href="{{ child_link.url }}" li-object="child_link.title" li-object:href="child_link.url" class="navbar_dropdown-link w-dropdown-link">{{ child_link.title }}</a>
                            
                            {% if child_link.links.size > 0 %}    <div li-if="child_link.links.size > 0">
    {% for grandchild_link in child_link.links %}    <div li-for="grandchild_link in child_link.links">
                                    
                            <a href="{{ grandchild_link.url }}" li-object="grandchild_link.title" li-object:href="grandchild_link.url" class="navbar_dropdown-link_child w-dropdown-link">{{ grandchild_link.title }}</a>
                            
                        </div>
{% endfor %}    </div>
{% endif %}
                            
                        </div>
{% endfor %}</div></div></div>    </nav>
{% endif %}
                            
                        </div>
{% endfor %}{% for link in linklists['main-menu-2'].links %}    <div data-hover="true" data-delay="200" li-for="link in linklists['main-menu-2'].links" class="navbar_menu-dropdown hide-tablet w-dropdown">
                                    
                            <div class="navbar_dropdown-toggle w-dropdown-toggle">{% if link.links.size > 0 %}    <div li-if="link.links.size > 0" class="dropdown-icon w-embed">
    <svg width=" 100%" height=" 100%" viewbox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.55806 6.29544C2.46043 6.19781 2.46043 6.03952 2.55806 5.94189L3.44195 5.058C3.53958 4.96037 3.69787 4.96037 3.7955 5.058L8.00001 9.26251L12.2045 5.058C12.3021 4.96037 12.4604 4.96037 12.5581 5.058L13.4419 5.94189C13.5396 6.03952 13.5396 6.19781 13.4419 6.29544L8.17678 11.5606C8.07915 11.6582 7.92086 11.6582 7.82323 11.5606L2.55806 6.29544Z" fill="currentColor"></path></svg>    </div>
{% endif %}<a li-object:href="link.url" href="{{ link.url }}" class="w-inline-block">{% unless link.title contains '#' %}    <div li-unless="link.title contains '#'">
    <div li-object="link.title">{{ link.title }}</div>    </div>
{% endunless %}{% if link.title contains '#' %}    <div li-if="link.title contains '#'">
    <div li-object="link.title | slice: 8, 100" {% if link.title contains '#' %}style='color: {{ link.title | slice: 0, 7 }}'{% endif %}>{{ link.title | slice: 8, 100 }}</div>    </div>
{% endif %}</a></div>
                            
                            {% if link.links.size > 0  %}    <nav li-if="link.links.size > 0 " class="navbar_dropdown-list hide-scrollbar w-dropdown-list">
    <div class="padding-global max-width-full"><div class="container-large"><div class="navbar_dropdown-grid">{% for child_link in link.links %}    <div li-for="child_link in link.links" id="w-node-fd87d5d8-8c6b-1eca-eca8-fdcf3f76b9b3-b641c10b">
                                    
                            <a href="{{ child_link.url }}" li-object="child_link.title" li-object:href="child_link.url" class="navbar_dropdown-link w-dropdown-link">{{ child_link.title }}</a>
                            
                            {% if child_link.links.size > 0 %}    <div li-if="child_link.links.size > 0">
    {% for grandchild_link in child_link.links limit:3 %}    <div li-for="grandchild_link in child_link.links limit:3">
                                    
                            <a href="{{ grandchild_link.url }}" li-object="grandchild_link.title" li-object:href="grandchild_link.url" class="navbar_dropdown-link_child w-dropdown-link">{{ grandchild_link.title }}</a>
                            
                        </div>
{% endfor %}<div class="navbar_dropdown-link_child-list">{% for grandchild_link in child_link.links offset:3 %}    <div li-for="grandchild_link in child_link.links offset:3">
                                    
                            <a href="{{ grandchild_link.url }}" li-object="grandchild_link.title" li-object:href="grandchild_link.url" class="navbar_dropdown-link_child w-dropdown-link">{{ grandchild_link.title }}</a>
                            
                        </div>
{% endfor %}</div>{% if child_link.links.size > 3 %}    <div li-if="child_link.links.size > 3" class="navbar_dropdown-link_child is-more">
    <div class="navbar_dropdown-link_child-text">Mehr anzeigen</div><img src="{{ 'arrow_1.svg' | asset_url }}" loading="lazy" alt="" class="navbar_dropdown-link_child-icon is-open">
    </div>
{% endif %}    </div>
{% endif %}
                            
                        </div>
{% endfor %}</div></div></div>    </nav>
{% endif %}
                            
                        </div>
{% endfor %}</nav><div class="navbar_shop-icons"><div><div id="searchopen" x-on:click="modals = 1" class="navbar_shop-icon"><div class="icon-embed-xsmall w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewbox="0 0 25 25" fill="none" preserveaspectratio="xMidYMid meet" aria-hidden="true" role="img"><mask id="mask0_2941_121300" style="mask-type:alpha" maskunits="userSpaceOnUse" x="0" y="0" width="25" height="25"><rect x="0.123535" y="0.987549" width="24" height="24" fill="#D9D9D9"></rect></mask><g mask="url(#mask0_2941_121300)"><path d="M19.7235 21.9875L13.4235 15.6875C12.9235 16.0875 12.3485 16.4042 11.6985 16.6375C11.0485 16.8709 10.3569 16.9875 9.62354 16.9875C7.80687 16.9875 6.26937 16.3584 5.01104 15.1C3.7527 13.8417 3.12354 12.3042 3.12354 10.4875C3.12354 8.67088 3.7527 7.13338 5.01104 5.87505C6.26937 4.61672 7.80687 3.98755 9.62354 3.98755C11.4402 3.98755 12.9777 4.61672 14.236 5.87505C15.4944 7.13338 16.1235 8.67088 16.1235 10.4875C16.1235 11.2209 16.0069 11.9125 15.7735 12.5625C15.5402 13.2125 15.2235 13.7875 14.8235 14.2875L21.1235 20.5875L19.7235 21.9875ZM9.62354 14.9875C10.8735 14.9875 11.936 14.55 12.811 13.675C13.686 12.8 14.1235 11.7375 14.1235 10.4875C14.1235 9.23755 13.686 8.17505 12.811 7.30005C11.936 6.42505 10.8735 5.98755 9.62354 5.98755C8.37354 5.98755 7.31104 6.42505 6.43604 7.30005C5.56104 8.17505 5.12354 9.23755 5.12354 10.4875C5.12354 11.7375 5.56104 12.8 6.43604 13.675C7.31104 14.55 8.37354 14.9875 9.62354 14.9875Z" fill="currentColor"></path></g></svg></div></div><div x-bind:class="modals === 1 ? 'is-open' : ''" class="navbar_predictive-search-holder"><div x-on:click="modals = 0" class="navbar_predictive-search-close"></div>{% render 'predictive_search_co' %}
</div></div><div><a href="https://shopify.com/61946167446/account" class="navbar_shop-icon w-inline-block"><div class="icon-embed-xsmall w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewbox="0 0 24 24" fill="none" preserveaspectratio="xMidYMid meet" aria-hidden="true" role="img"><mask id="mask0_2941_121306" style="mask-type:alpha" maskunits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="#D9D9D9"></rect></mask><g mask="url(#mask0_2941_121306)"><path d="M12 12C10.9 12 9.95833 11.6083 9.175 10.825C8.39167 10.0417 8 9.1 8 8C8 6.9 8.39167 5.95833 9.175 5.175C9.95833 4.39167 10.9 4 12 4C13.1 4 14.0417 4.39167 14.825 5.175C15.6083 5.95833 16 6.9 16 8C16 9.1 15.6083 10.0417 14.825 10.825C14.0417 11.6083 13.1 12 12 12ZM4 20V17.2C4 16.6333 4.14583 16.1125 4.4375 15.6375C4.72917 15.1625 5.11667 14.8 5.6 14.55C6.63333 14.0333 7.68333 13.6458 8.75 13.3875C9.81667 13.1292 10.9 13 12 13C13.1 13 14.1833 13.1292 15.25 13.3875C16.3167 13.6458 17.3667 14.0333 18.4 14.55C18.8833 14.8 19.2708 15.1625 19.5625 15.6375C19.8542 16.1125 20 16.6333 20 17.2V20H4ZM6 18H18V17.2C18 17.0167 17.9542 16.85 17.8625 16.7C17.7708 16.55 17.65 16.4333 17.5 16.35C16.6 15.9 15.6917 15.5625 14.775 15.3375C13.8583 15.1125 12.9333 15 12 15C11.0667 15 10.1417 15.1125 9.225 15.3375C8.30833 15.5625 7.4 15.9 6.5 16.35C6.35 16.4333 6.22917 16.55 6.1375 16.7C6.04583 16.85 6 17.0167 6 17.2V18ZM12 10C12.55 10 13.0208 9.80417 13.4125 9.4125C13.8042 9.02083 14 8.55 14 8C14 7.45 13.8042 6.97917 13.4125 6.5875C13.0208 6.19583 12.55 6 12 6C11.45 6 10.9792 6.19583 10.5875 6.5875C10.1958 6.97917 10 7.45 10 8C10 8.55 10.1958 9.02083 10.5875 9.4125C10.9792 9.80417 11.45 10 12 10Z" fill="currentColor"></path></g></svg></div></a></div><script>
    document.addEventListener('alpine:init', () => {

    Alpine.data('handleMinicart', () => ({
        init() {
            console.log('handleMinicart init')
        },
        cart: {
            note: null,
            attributes: {},
            items: [],
            currency: window.Shopify.currency.active,
            cart_level_discount_applications: [],
            response: {
                result : {},
                show : false,
                timeout : 5000,
            },
            item_count: 0,
            total_price:0,
            total_weight: 0,
            total_discount: 0,
            original_total_price: 0,
            items_subtotal_price: 0
        },
        _abortController : null,
        initAbortController() {
            if(this._abortController) {
                this._abortController.abort('abort previous request');
            }
            this._abortController = new AbortController()
        },
        getAbortControllerSignal() {
            return this._abortController.signal
        },
        resetAbortController() {
            this._abortController = null;
        },
        toggleMiniCart() {
            console.log('(minicart.js) toggleMiniCart called');

            LiquifyHelper.handleTriggerClick();

            this.getCart();
        },

        /**
         * Get the cart data.
         */
        async getCart() {
            this.initAbortController()
            await fetch(window.Shopify.routes.root + 'cart.js', {
                method: 'GET',
                signal: this.getAbortControllerSignal(),
                headers: {'Content-Type': 'application/json'},
            })
                .then(response => response.json())
                .then(data => {
                    this.resetAbortController();

                    this.cart.item_count = data.item_count;

                    this.cart.items = data.items.map((item) => {
                        item.title = this.htmlspecialchars_decode(item.title)
                        return item
                    })


                    this.cart.total_price = data.total_price;
                    this.cart.total_weight = data.total_weight;
                    this.cart.total_discount = data.total_discount;

                    this.$dispatch('carttotalitems', data.item_count);
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        },

        /**
         * @param key
         * @param quantity
         */
        increaseCartItemQuantity(key, quantity) {
            this.updateCartItemQuantity(key, parseInt(quantity) + 1);
        },

        /**
         * @param key
         * @param quantity
         */
        decreaseCartItemQuantity(key, quantity) {
            this.updateCartItemQuantity(key, parseInt(quantity) - 1);
        },

        /**
         * Update the cart item.
         *
         * @param key
         * @param quantity
         */
        updateCartItemQuantity(key, quantity) {
            this.initAbortController();
            console.log('updateCartItemQuantity(): key, quantity: ', key, quantity);
            this.cart.items.filter((product)  => {
                if(product.key === key) {
                    product.quantity = quantity
                }
            })
            let updates = {};
            updates[key] = quantity;
            fetch(window.Shopify.routes.root + 'cart/update.js', {
                method: 'POST',
                signal: this.getAbortControllerSignal(),
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ updates }),
            })
                .then(response => response.json())
                .then(data => {
                    this.resetAbortController();
                    console.log('updateCartItemQuantity(): ', data);

                    this.$dispatch('cartupdated');
                    this.$dispatch('showcartmessage', { status: data.status, message: data.message, description: data.description });
                })
                .catch((error) => {
                    console.error('Error:', error);
                    this.$dispatch('showcartmessage', { status: error?.status, message: error, description: error });
                });
        },

        /**
         * Format monetary values.
         */
        moneyFormat(value, minor = true) {
            return LiquifyHelper.moneyFormat(value, minor)
        },

        htmlspecialchars_decode(string) {
            return LiquifyHelper.htmlspecialchars_decode(string)
        },

        /**
         * Shows the minicart api message
         * @param event
         */
        showCartMessage(event) {
            //console.log("dispatched showCartMessage", event)
            if(event?.detail?.status) {
                this.cart.response.result = event.detail ?? {}
                this.cart.response.show = true
                setTimeout(() => {
                    this.cart.response.result = {};
                    this.cart.response.show = false
                }, this.cart.response.timeout ?? 5000)
            }
        },

        async returnCartItems() {
            await this.getCart();

            this.$dispatch('currentcartitems', this.cart.items);
        },

        /**
         * @deprecated
         */
        set open(open) { // deprecated use  LiquifyHelper instead
            //console.warn('Deprecated "set open" in mini_cart')
        },
        /**
         * @deprecated
         */
        get open() { // deprecated use  LiquifyHelper instead
            //console.warn('Deprecated "get open" in mini_cart')
            return false;
        },
        /**
         * @deprecated
         */
        set note(note) { // deprecated
            //console.warn('Deprecated "set note" in mini_cart')
            this.cart.note = note;
        },
        /**
         * @deprecated
         */
        get note() { // deprecated
            //console.warn('Deprecated "get note" in mini_cart')
            return this.cart.note;
        },
        /**
         * @deprecated
         */
        set attributes(attributes) { // deprecated
            //console.warn('Deprecated "set attributes" in mini_cart')
            this.cart.attributes = attributes;
        },
        /**
         * @deprecated
         */
        get attributes() { // deprecated
            //console.warn('Deprecated "get attributes" in mini_cart')
            return this.cart.attributes;
        },
        /**
         * @deprecated
         */
        set original_total_price(original_total_price) { //deprecated
            //console.warn('Deprecated "set original_total_price" in mini_cart')
            this.cart.original_total_price = original_total_price;
        },
        /**
         * @deprecated
         */
        get original_total_price() { //deprecated
            //console.warn('Deprecated "get original_total_price" in mini_cart')
            return this.cart.original_total_price;
        },
        /**
         * @deprecated
         */
        set total_price(total_price) { //deprecated
            //console.warn('Deprecated "set total_price" in mini_cart')
            this.cart.total_price = total_price;
        },
        /**
         * @deprecated
         */
        get total_price() { //deprecated
            //console.warn('Deprecated "get total_price" in mini_cart')
            return this.cart.total_price;
        },
        /**
         * @deprecated
         */
        set total_discount(total_discount) { //deprecated
            //console.warn('Deprecated "set total_discount" in mini_cart')
            this.cart.total_discount = total_discount;
        },
        /**
         * @deprecated
         */
        get total_discount() { //deprecated
            //console.warn('Deprecated "get total_discount" in mini_cart')
            return this.cart.total_discount;
        },
        /**
         * @deprecated
         */
        set total_weight(total_weight) { //deprecated
            //console.warn('Deprecated "set total_weight" in mini_cart')
            this.cart.total_discount = total_weight;
        },
        /**
         * @deprecated
         */
        get total_weight() { //deprecated
            //console.warn('Deprecated "get total_weight" in mini_cart')
            return this.cart.total_weight;
        },
        /**
         * @deprecated
         */
        set item_count(item_count) { //deprecated
            //console.warn('Deprecated "set item_count" in mini_cart')
            this.cart.total_discount = item_count;
        },
        /**
         * @deprecated
         */
        get item_count() { //deprecated
            //console.warn('Deprecated "get item_count" in mini_cart')
            return this.cart.item_count;
        },
        /**
         * @deprecated
         */
        set items_subtotal_price(items_subtotal_price) { //deprecated
            //console.warn('Deprecated "set items_subtotal_price" in mini_cart')
            this.cart.items_subtotal_price = items_subtotal_price;
        },
        /**
         * @deprecated
         */
        get items_subtotal_price() { //deprecated
            //console.warn('Deprecated "get items_subtotal_price" in mini_cart')
            return this.cart.items_subtotal_price;
        },
        /**
         * @deprecated
         */
        set products(products) {
            //console.warn('Deprecated "set products" in mini_cart')
            this.cart.items = products;
        },
        /**
         * @deprecated
         */
        get products() {
            //console.warn('Deprecated "get products" in mini_cart')
            return this.cart.items;
        },
        /**
         * @deprecated
         */
        set requires_shipping(requires_shipping) {
            //console.warn('Deprecated "set requires_shipping" in mini_cart')
        },
        /**
         * @deprecated
         */
        get requires_shipping() {
            //console.warn('Deprecated "get requires_shipping" in mini_cart')
            return false;
        },
        /**
         * @deprecated
         */
        set currency(currency) { //deprecated
            //console.warn('Deprecated "set currency" in mini_cart')
            this.cart.currency = currency;
        },
        /**
         * @deprecated
         */
        get currency() { //deprecated
            //console.warn('Deprecated "get currency" in mini_cart')
            return this.cart.currency;
        },
        /**
         * @deprecated
         */
        set cart_level_discount_applications(cart_level_discount_applications) { //deprecated
            //console.warn('Deprecated "set cart_level_discount_applications" in mini_cart')
            this.cart.cart_level_discount_applications = cart_level_discount_applications;
        },
        /**
         * @deprecated
         */
        get cart_level_discount_applications() { //deprecated
            //console.warn('Deprecated "get cart_level_discount_applications" in mini_cart')
            return this.cart.cart_level_discount_applications;
        },
        /**
         * @deprecated
         */
        set cartApiResponse(cartApiResponse) { //deprecated
            //console.warn('Deprecated "set cartApiResponse" in mini_cart')
            this.cart.cartApiResponse = cartApiResponse;
        },
        /**
         * @deprecated
         */
        get cartApiResponse() { //deprecated
            //console.warn('Deprecated "get cartApiResponse" in mini_cart')
            return this.cart.response;
        },
        /**
         * @deprecated
         */
        set total(total) { //deprecated
            //console.warn('Deprecated "set total" in mini_cart')
            this.cart.item_count = total.items;
            this.cart.total_price = total.price;
            this.cart.total_weight = total.weight;
            this.cart.total_discount = total.discount;
        },
        /**
         * @deprecated
         */
        get total() { //deprecated
            //console.warn('Deprecated "get total" in mini_cart')
            return {
                items: this.cart.item_count,
                price: this.cart.total_price,
                weight: this.cart.total_weight,
                discount: this.cart.total_discount,
            };
        }
    }))


});

</script>
<div data-hover="false" data-delay="0" li-element="mini-cart" class="w-dropdown" x-data="handleMinicart()" x-init="getCart()" @cartupdated.window="getCart()" @setcartitem.window="updateCartItemQuantity($event.detail.product, $event.detail.quantity)" @increasecartitem.window="increaseCartItemQuantity($event.detail.product, $event.detail.quantity)" @decreasecartitem.window="decreaseCartItemQuantity($event.detail.product, $event.detail.quantity)" @toggleminicart.window="toggleMiniCart()" @showcartmessage.window="showCartMessage" @getcartitems.window="returnCartItems"><div li-element="mini-cart-toggle" class="navbar_shop-icon w-dropdown-toggle" @click="$dispatch('cartupdated.window')"><div class="icon-embed-xsmall w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewbox="0 0 24 24" fill="none" preserveaspectratio="xMidYMid meet" aria-hidden="true" role="img"><mask id="mask0_2941_121294" style="mask-type:alpha" maskunits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="#D9D9D9"></rect></mask><g mask="url(#mask0_2941_121294)"><path d="M6 22C5.45 22 4.97917 21.8042 4.5875 21.4125C4.19583 21.0208 4 20.55 4 20V8C4 7.45 4.19583 6.97917 4.5875 6.5875C4.97917 6.19583 5.45 6 6 6H8C8 4.9 8.39167 3.95833 9.175 3.175C9.95833 2.39167 10.9 2 12 2C13.1 2 14.0417 2.39167 14.825 3.175C15.6083 3.95833 16 4.9 16 6H18C18.55 6 19.0208 6.19583 19.4125 6.5875C19.8042 6.97917 20 7.45 20 8V20C20 20.55 19.8042 21.0208 19.4125 21.4125C19.0208 21.8042 18.55 22 18 22H6ZM6 20H18V8H16V10C16 10.2833 15.9042 10.5208 15.7125 10.7125C15.5208 10.9042 15.2833 11 15 11C14.7167 11 14.4792 10.9042 14.2875 10.7125C14.0958 10.5208 14 10.2833 14 10V8H10V10C10 10.2833 9.90417 10.5208 9.7125 10.7125C9.52083 10.9042 9.28333 11 9 11C8.71667 11 8.47917 10.9042 8.2875 10.7125C8.09583 10.5208 8 10.2833 8 10V8H6V20ZM10 6H14C14 5.45 13.8042 4.97917 13.4125 4.5875C13.0208 4.19583 12.55 4 12 4C11.45 4 10.9792 4.19583 10.5875 4.5875C10.1958 4.97917 10 5.45 10 6Z" fill="currentColor"></path></g></svg></div><div li-element="mini-cart-item-count" class="navbar_shop-quantity" x-data="{ items: 0 }" x-text="items" @carttotalitems.window="items = event.detail">1<br>
</div></div><nav li-element="mini-cart-container" class="navbar_mini-cart-holder w-dropdown-list" :class="open || 'mini-cart-closed'"><div li-element="dropdown-toggle" class="navbar_mini-cart-close" data-dropdowntoggle="" @click="LiquifyHelper.triggerClick($event.target.closest('.w-dropdown').querySelector('.w-dropdown-toggle.w--open'))"></div><div class="mini-cart_component"><div li-element="mini-cart-full" class="mini-cart_full" :style="total.items < 1 && { display: 'none' }"><div class="mini-cart_header"><div class="heading-style-h3">Warenkorb</div><div li-element="dropdown-toggle" class="mini-cart_close w-embed" data-dropdowntoggle="" @click="LiquifyHelper.triggerClick($event.target.closest('.w-dropdown').querySelector('.w-dropdown-toggle.w--open'))"><svg width="15" height="15" viewbox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.84775 14.178L0.447754 12.778L6.04775 7.17798L0.447754 1.57798L1.84775 0.177979L7.44775 5.77798L13.0478 0.177979L14.4478 1.57798L8.84775 7.17798L14.4478 12.778L13.0478 14.178L7.44775 8.57798L1.84775 14.178Z" fill="currentColor"></path></svg></div></div><div class="mini-cart_line-item hide-scrollbar"><ul role="list" class="mini-cart_line-item_list w-list-unstyled"><template x-for="product in products" :key="product.key">
    <li li-element="mini-cart-item" class="mini-cart_line-item_item"><a li-js-object:href="product.url" href="#" class="w-inline-block" x-bind:href="product.url"><img src="https://d3e54v103j8qbb.cloudfront.net/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" x-bind:src="product.image" alt="" class="mini-cart_line-item_img">
</a><div class="mini-cart_line-item_product-info"><a li-js-object:href="product.url" href="#" class="w-inline-block" x-bind:href="product.url"><div li-js-object="product.title" class="text-size-regular text-weight-bold" x-text="product.title">Product Titel</div></a><div class="mini-cart_line-item_price"><div li-js-price="product.price" class="text-size-small" x-text="LiquifyHelper.moneyFormat(product.price, true, '{{ shop.money_with_currency_format }}')">14,99 €</div><template x-if="product.price < product.original_price">
            <div li-mini-cart-if="product.price < product.original_price">
        <div li-js-price="product.original_price" class="text-size-small text-style-strikethrough text-style-muted" x-text="LiquifyHelper.moneyFormat(product.original_price, true, '{{ shop.money_with_currency_format }}')">14,99 €</div>        </div>
    </template>
</div><div class="mini-cart_line-item_quantity"><div li-element="mini-cart-item-decrease" class="mini-cart_line-item_quantity-adjust" :productprop="product" @click="$dispatch('decreasecartitem', { product: product.key, quantity: product.quantity, action: 'decrease' })">-</div><input li-element="mini-cart-item-quantity" class="mini-cart_line-item_quantity-adjust" :productprop="product" @input="$dispatch('setcartitem', { product: product.key, quantity: product.quantity })" x-model="product.quantity">
<div li-element="mini-cart-item-increase" class="mini-cart_line-item_quantity-adjust" :productprop="product" @click="$dispatch('increasecartitem', { product: product.key, quantity: product.quantity, action: 'increase' })">+</div></div><div li-element="mini-cart-item-remove" class="text-size-tiny text-color-grey" :productprop="product" @click="$dispatch('setcartitem', { product: product.key, quantity: 0 })">Entfernen</div></div></li></template>
</ul></div><div class="mini-cart_footer"><div li-api-response="" class="mini-cart_error" x-show="cartApiResponse.show"><div li-js-object="cartApiResponse?.result?.message" class="mini-cart_message-holder" x-text="cartApiResponse?.result?.message">This is some text inside of a div block.</div></div><div class="mini-cart_footer_total"><div class="text-size-regular text-weight-bold">Gesamtbetrag</div><div><div li-js-price="total.price" class="text-size-regular text-weight-bold" x-text="LiquifyHelper.moneyFormat(total.price, true, '{{ shop.money_with_currency_format }}')">14,99 €</div><template x-if="total.price < original_total_price">
            <div li-mini-cart-if="total.price < original_total_price">
        <div li-js-price="original_total_price" class="text-size-regular text-weight-bold text-style-strikethrough text-style-muted" x-text="LiquifyHelper.moneyFormat(original_total_price, true, '{{ shop.money_with_currency_format }}')">14,99 €</div>        </div>
    </template>
</div></div><a x-bind:href="'/checkout'" href="#" class="button w-button">Zur Kasse</a><a li-object:href="routes.cart_url" href="{{ routes.cart_url }}" class="button is-secondary w-button">Warenkorb</a></div></div><div li-element="mini-cart-empty" :style="total.items && { display: 'none' }"><div class="mini-cart_header"><div class="heading-style-h3">Warenkorb</div><div li-element="dropdown-toggle" class="mini-cart_close w-embed" data-dropdowntoggle="" @click="LiquifyHelper.triggerClick($event.target.closest('.w-dropdown').querySelector('.w-dropdown-toggle.w--open'))"><svg width="15" height="15" viewbox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.84775 14.178L0.447754 12.778L6.04775 7.17798L0.447754 1.57798L1.84775 0.177979L7.44775 5.77798L13.0478 0.177979L14.4478 1.57798L8.84775 7.17798L14.4478 12.778L13.0478 14.178L7.44775 8.57798L1.84775 14.178Z" fill="currentColor"></path></svg></div></div><div class="mini-cart_empty"><div class="text-size-regular">Keine Artikel im Warenkorb</div></div></div></div></nav></div></div><div class="navbar_menu-button w-nav-button"><div class="menu-icon1"><div class="menu-icon1_line-top"></div><div class="menu-icon1_line-middle"><div class="menu-icon_line-middle-inner"></div></div><div class="menu-icon1_line-bottom"></div></div></div></div></div> {% schema %} {"tag":"div","name":"header","class":"section_navbar","blocks":[{"name":"Vorschlaege","type":"vorschlaege","settings":[{"id":"url_link","type":"url","label":"Link"},{"id":"text_text","type":"text","label":"Text","default":"Tag"}]}],"settings":[{"id":"collection_bestseller","type":"collection","label":"Bestseller"},{"type":"range","id":"collection_bestseller_limit","min":1,"max":99,"step":1,"label":"Limit: Bestseller","default":6}],"presets":[{"name":"header","category":"Liquify","blocks":[{"type":"vorschlaege"}]}]} {% endschema %}