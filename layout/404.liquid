<!doctype html>
<html data-wf-page="64ad3947567a71fb9ee100e7" data-wf-site="64ad3945567a71fb9ee0ff72" lang="{{ request.locale.iso_code }}"><head><meta charset="utf-8">
<title>404 Page</title><meta content="404 Page" property="og:title">
<meta content="404 Page" property="twitter:title">
<meta content="width=device-width, initial-scale=1" name="viewport">
<link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'components.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'auf-und-davon-644d27.css' | asset_url }}" rel="stylesheet" type="text/css">
<script type="text/javascript">! function(o, c) {
        var n = c.documentElement,
          t = " w-mod-";
        n.className += t + "js", ("ontouchstart" in o || o.DocumentTouch && c instanceof DocumentTouch) && (n.className += t + "touch")
      }(window, document);
    </script>
            {% if settings.favicon == blank %}
              <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
            {% else %}
              <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
            {% endif %}
        

            {% if settings.apple_touch_icon == blank %}
              <link href="{{ 'webclip.png' | asset_url }}" rel="apple-touch-icon">
            {% else %}
              <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
            {% endif %}
        
<script defer="" src="{{ 'alpinejs3.js' | asset_url }}"></script><style>.hide-webflow {
        display: block !important;
      }
    </style><!--  Google Tag Manager  -->
<script>(function(w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({
          'gtm.start': new Date().getTime(),
          event: 'gtm.js'
        });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : '';
        j.async = true;
        j.src =
          'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', 'GTM-THNF36GH');
    </script><!--  End Google Tag Manager  -->
<link href="{{ canonical_url }}" rel="canonical">
<script defer="" src="https://cdn.jsdelivr.net/gh/liquify-pro/liquify-automated-support-system/script.js"></script><meta name="google-site-verification" content="-ojmzz2HpuOsWBLAZzmpsErXMPs8L8YiyLhzlohS3PQ">
<script src="{{ '_helper.js' | asset_url }}" type="text/javascript"></script>{{ content_for_header }}</head>
<body li-page="404">

<div class="page-wrapper">{% render 'global_styles' %}
{% section 'header' %}
 {{ content_for_layout }} {% section 'footer' %}
</div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=64ad3945567a71fb9ee0ff72" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="{{ 'auf-und-davon-644d27.js' | asset_url }}" type="text/javascript"></script><script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script><script>$('.navbar_dropdown-link_child').on('click', function() {
        var dropdownList = $(this).siblings('.navbar_dropdown-link_child-list');
        var isOpen = dropdownList.hasClass('is-open');
        dropdownList.toggleClass('is-open');
        if (isOpen) {
          $(this).find('.navbar_dropdown-link_child-text').text('Mehr anzeigen');
          $(this).find('.navbar_dropdown-link_child-icon').removeClass('is-open');
        } else {
          $(this).find('.navbar_dropdown-link_child-text').text('Weniger anzeigen');
          $(this).find('.navbar_dropdown-link_child-icon').addClass('is-open');
        }
      });
    </script><script>// replace dive with predictive-search
      // Get the original <div> element
      var originalDiv = document.getElementById("originaldiv");
      // Create a new <predictive-search> element
      var newElement = document.createElement("predictive-search");
      // Copy the contents of the original <div> to the new element
      newElement.innerHTML = originalDiv.innerHTML;
      // Copy the attributes of the original <div> to the new element
      for (var i = 0; i < originalDiv.attributes.length; i++) {
        var attribute = originalDiv.attributes[i];
        newElement.setAttribute(attribute.name, attribute.value);
      }
      // Replace the original <div> with the new <predictive-search> element
      originalDiv.parentNode.replaceChild(newElement, originalDiv);
    </script><script>// predictive-search
      class PredictiveSearch extends HTMLElement {
        constructor() {
          super();
          this.input = this.querySelector('input[type="search"]');
          this.predictiveSearchResults = this.querySelector('#predictive-search');
          this.input.addEventListener('input', this.debounce((event) => {
            this.onChange(event);
          }, 300).bind(this));
        }
        onChange() {
          const searchTerm = this.input.value.trim();
          if (!searchTerm.length) {
            this.close();
            return;
          }
          this.getSearchResults(searchTerm);
        }
        getSearchResults(searchTerm) {
          fetch(`/search/suggest?q=${searchTerm}&resources[options][fields]=title,product_type,variants.title,vendor,body,tag&section_id=predictive_search`)
            .then((response) => {
              if (!response.ok) {
                var error = new Error(response.status);
                this.close();
                throw error;
              }
              return response.text();
            })
            .then((text) => {
              const resultsMarkup = new DOMParser().parseFromString(text, 'text/html').querySelector('#shopify-section-predictive_search').innerHTML;
              this.predictiveSearchResults.innerHTML = resultsMarkup;
              this.open();
            })
            .catch((error) => {
              this.close();
              throw error;
            });
        }
        open() {
          this.predictiveSearchResults.style.display = 'block';
        }
        close() {
          this.predictiveSearchResults.style.display = 'none';
        }
        debounce(fn, wait) {
          let t;
          return (...args) => {
            clearTimeout(t);
            t = setTimeout(() => fn.apply(this, args), wait);
          };
        }
      }
      customElements.define('predictive-search', PredictiveSearch);
    </script><script>document.addEventListener("DOMContentLoaded", function() {
        $('#searchopen').on('click', function() {
          console.log('Klick auf #searchopen wurde ausgel&ouml;st');
          $('#suche').focus();
        });
      });
    </script>{% render 'pandectes-rules' %}

</body>
</html>